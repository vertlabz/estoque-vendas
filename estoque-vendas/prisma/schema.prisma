datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  name      String?
  email     String?   @unique
  password  String?
  role      String?   @default("vendedor")
  createdAt DateTime  @default(now())
  sales     Sale[]
}
model Category {
  id       Int        @id @default(autoincrement())
  name     String     @unique   // ðŸ”¹ precisa ser Ãºnico
  products Product[]
}
model Product {
  id           Int        @id @default(autoincrement())
  name         String?
  category     Category?  @relation(fields: [categoryId], references: [id])
  categoryId   Int?
  price        Float?
  costPrice    Float?
  stock        Int        @default(0)
  minStock Int @default(0)

  multiplier   Int        @default(1)
  parentId     Int?
  parent       Product?   @relation("ProductChildren", fields: [parentId], references: [id])
  children     Product[]  @relation("ProductChildren")
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  saleItems    SaleItem[]
  comandaItems ComandaItem[]

  supplierId   Int?
  supplier     Supplier? @relation(fields: [supplierId], references: [id])
}

model Supplier {
  id        Int       @id @default(autoincrement())
  name      String?
  contact   String?
  cnpj      String?
  email     String?
  products  Product[] // relaÃ§Ã£o reversa
}
model Client {
  id        Int       @id @default(autoincrement())
  name      String?
  phone     String?
  address   String?
  cpfCnpj   String?
  sales     Sale[]
}

model Sale {
  id          Int        @id @default(autoincrement())
  user        User?      @relation(fields: [userId], references: [id])
  userId      Int?
  client      Client?    @relation(fields: [clientId], references: [id])
  clientId    Int?
  offlineId   String?    @unique
  total       Float?
  payment     String?    @default("dinheiro")
  metodoPagamento String
  discount    Float?     @default(0)
  createdAt   DateTime   @default(now())
  items       SaleItem[]
}

model SaleItem {
  id        Int      @id @default(autoincrement())
  sale      Sale?    @relation(fields: [saleId], references: [id])
  saleId    Int?
  product   Product? @relation(fields: [productId], references: [id])
  productId Int?
  quantity  Int?
  price     Float?
  costPrice Float?
  total     Float?
}

model Comanda {
  id        Int           @id @default(autoincrement())
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  status    String        @default("aberta")
  clientName String?
  itens     ComandaItem[]
}

model ComandaItem {
  id        Int      @id @default(autoincrement())
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantidade Int
  comanda   Comanda  @relation(fields: [comandaId], references: [id])
  comandaId Int
}
